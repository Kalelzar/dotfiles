#!/bin/sh

getDevices(){
    bluetoothctl devices \
        | cut -d' ' -f2 \
        | xargs -L 1 bluetoothctl info\
        | grep -E "Alias|Icon" \
        | cut -d: -f2 \
        | sed -E 's/^[[:space:]]+//g;s/^(.*)$/"\1"/g' \
        | xargs -L 2 printf "%s (%s)\n" \
        | sed -E  -e 's/(.*) \(phone\)/ðŸ“± \1/g'\
                  -e 's/(.*) \(audio-(card|head(set|phones))\)/ðŸŽ§ \1/g'\
                  -e 's/(.*) \(computer\)/ðŸ–¥ \1/g'
}

singleQuery(){
    bluetoothctl devices \
        | cut -d' ' -f2 \
        | xargs -L 1 bluetoothctl info\
        | grep -E "$1" \
        | grep -n yes \
        | cut -d: -f1 \
        | pred
}

format(){
    tr '\n' ',' | sed 's/,$//g'
}

connectedDevices(){
    singleQuery "Connected" | format
}

pairedDevices(){
    connected=$(connectedDevices | tr ',' '|')
    if [ -n "$connected" ]
    then
        singleQuery "Paired" \
            | grep -Ev "$connected" \
            | format
    else
        singleQuery "Paired" | format
    fi
}

pick(){
    rofi -dmenu \
         -l 10 \
         -r \
         -m "-1"\
         -p "Select which device to connect to" \
         -a "$(pairedDevices)"\
         -u "$(connectedDevices)"\
         -columns 2 \
         -theme-str 'prompt,entry{font:"Source Serif 16";vertical-align:0.5;}'\
         -theme-str '* {font: "Fira Code 36";}' \
         | cut -d' ' -f2-
}

bluetoothctl power on >/dev/null 2>&1

if [ "$1" != "--offline" ]
then
    notify-send "Bluetooth" "Scanning for devices"
    bluetoothctl --timeout=5 scan on >/dev/null 2>&1
fi


dev="$(getDevices | pick)"

[ -z "$dev" ] && exit 0

mac="$(bluetoothctl paired-devices | grep "$dev" | cut -d' ' -f2)"
[ -z "$mac" ] && {
    notify-send "Bluetooth" "Attempting to pair with device $dev"
    mac="$(bluetoothctl devices | grep "$dev" | cut -d' ' -f2)"
    if bluetoothctl pair "$mac" >/dev/null 2>&1
    then
        notify-send "Bluetooth" "Pairing successful."
    else
        notify-send "Bluetooth" "Failed to pair with device $dev"
        exit 1;
    fi
}

isConnected="$(bluetoothctl info "$mac" | grep -c "Connected: yes" )"

if [ "$isConnected" != "0" ]
then
    notify-send "Bluetooth" "Already connected. Disconnecting..."
    bluetoothctl disconnect "$mac" >/dev/null 2>&1
fi


isTrusted="$(bluetoothctl info "$mac" | grep -c "Trusted: yes" )"

if [ "$isTrusted" = "0" ]
then
    notify-send "Bluetooth" "Trusting device."
    bluetoothctl trust "$mac" >/dev/null 2>&1
fi

if bluetoothctl connect "$mac" >/dev/null 2>&1
then
    notify-send "Bluetooth" "Connection successful."
else
    notify-send "Bluetooth" "Failed to connect to device $dev"
fi
