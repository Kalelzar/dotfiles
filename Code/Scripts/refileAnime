#!/bin/bash


filenameToJSON(){
    echo "$1" \
        | perl -pe 's/^(?:[[(](.*?)[\])])?\s*(.*?)\s*[-](?:[-\s]+)\s*(?:END)?\s*(?|S(\d+)\s*[-]?\s*|S(\d+)|S(\d)\s*-\s*|\s*[-]?\s*)[E]?(\d+(?:[-]?[E]?\d+)?)*(?:v[1-9]+)?\s*[-]?\s*(.*?)\s*(?|[(]?(\d+p)\s*(.*)[)]?|(?:[[(](\d+p)[\])])?\s*(?:[[(](.*)[\])])?)[.](mkv|mp4)$/{ "release": "\1","title": "\2","season": "\3","episode": "\4", "episodeTitle": "\5", "quality": "\6","extra": "\7", "format": "\8"}/g'
}

specialHandling(){
    local base="$1"
    local ruleRWBYHyousetsuTeikoku="s/RWBY - Hyousetsu Teikoku/RWBY ➖ Hyousetsu Teikoku/g"
    local ruleGundamWitch="s/Mobile Suit Gundam - The Witch from Mercury/Mobile Suit Gundam ➖ The Witch from Mercury/g"
    local ruleEndingInRomanIVAsSeason="s/IV - / - S4E/g"
    echo "$base" | sed -E \
                       -e "$ruleRWBYHyousetsuTeikoku" \
                       -e "$ruleGundamWitch" \
                       -e "$ruleEndingInRomanIVAsSeason"
}

fixedFilenameToJSON(){
    local fixedDotSeparatedName="$(echo "$1" | sed -E 's/.([a-z0-9]{3})$/@\1/;s/(.)[.](.)/\1 \2/g;s/@([a-z0-9]{3})$/.\1/')"
    local specialHandled="$(specialHandling "$fixedDotSeparatedName")"
    local json="$(filenameToJSON "$specialHandled" | sed 's/➖/-/g')"
    local episode="$(echo "$json" | jq .episode)"
    if [ -n "$episode" ]
    then
       local season="$(printf "%02d" "$(echo "$json" | jq 'try (.season | tonumber) catch 1')")"
    else
       local season=""
    fi
           
    echo "$json" | jq ".season = \"$season\""
}

listAnimeFull(){
    find "$HOME/Downloads" -iregex ".*.mkv\\|.*.mp4" | grep -F "$1"
}

json(){
    
    echo "{\"filename\": \"$(listAnimeFull "$1")\", \"data\": $(fixedFilenameToJSON "$1")}"
}

listAnime(){
    find "$HOME/Downloads" -iregex ".*.mkv\\|.*.mp4" -printf "%f\n"
}


json-stream(){
    while read -r file
    do
        json "$file"
    done
}

genReplacements(){
    listAnime | json-stream | tee -a "$XDG_CACHE_HOME/refileAnime.log" | jq '{"old" : .filename, "new": "'"$HOME"'/Anime/\(.data.title)/Season \(.data.season)/Episode S\(.data.season)E\(.data.episode) - \(.data.episodeTitle).\(.data.format)"}' | sed -E 's/ - [.]/./g'
}

genReplacements \
    | jq '"smv \"\(.old)\" \"\(.new)\""' \
    | sed -E 's/^"(.*)"$/\1/;s/\\"/"/g' \
    | sh
