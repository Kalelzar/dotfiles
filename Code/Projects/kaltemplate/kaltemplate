#!/bin/bash

KALTEMPLATE_VERSION="0.1"

SCOPE="global"

HIGHLIGHT_TABWIDTH=2
HIGHLIGHT_STYLE='pablo'
if [ "$( tput colors )" -ge 256 ]; then
    HIGHLIGHT_FORMAT='xterm256'
else
    HIGHLIGHT_FORMAT='ansi'
fi

echoCentered(){
    local str="$1"
    local row="$2"
    local width="$(tput cols)"
    local strlen=${#str}
    tput cup $row "$(((width / 2) - (strlen / 2)))"
    echo -n "$3"
    echo -n "$str"
    echo "$4"
}

configdir(){
    local configdir="$XDG_CONFIG_HOME/kaltemplate"
    [ -z "$XDG_CONFIG_HOME" ] && configdir="$HOME/.kaltemplate"
    echo "$configdir"
}

prepareConfig(){
    mkdir -p "$(configdir)"
}

mkTemplate(){
    local name="$1"
    local path="$2"
    mkdir -p "$(configdir)/templates/$name/$(uname -n)"
    mkdir -p "$(configdir)/templates/$name/disabled"
    echo -e "$path" > "$(configdir)/templates/$name/.template"
}

highlightFile(){
    local file="$1"
    highlight --replace-tabs="${HIGHLIGHT_TABWIDTH}" \
                      --out-format="${highlight_format}" \
                      --style="${HIGHLIGHT_STYLE}" --force -- "$file"
}

collectTemplate(){
    local template="$1"

    files=( $(find "$(configdir)/templates/$template" -maxdepth 1 -type f -regex ".*.unit"))

    files+=( $(find "$(configdir)/templates/$template/$(uname -n)" -maxdepth 1 -type f -regex ".*.unit") )

    cat "${files[@]}"
}

viewTemplate(){
    local template="$1"

    [ -z "$PAGER" ] && PAGER=less

    collectTemplate "$template" > tmp

    $PAGER tmp

    rm tmp
}

dereferenceUnit(){
    local unit="$1"

    local template=$(echo "$unit" | cut -d. -f1)
    local scope=$(echo "$unit" | cut -d. -f2)
    local unitFile=$(echo "$unit" | cut -d. -f3)

    [ -z "$unitFile" ] && {
        unitFile="$scope"
        scope="global"
    }


    [ -d "$(configdir)/templates/$template" ] || {
        echo -e "Cannot dereference unit '$unit'.\nTemplate '$template' doesn't exist."
        return 1
    }

    if [ "$scope" != "global" ]
    then
        [ -d "$(configdir)/templates/$template/$scope" ] || {
            echo -e "Cannot dereference unit '$unit'.\nTemplate '$template' doesn't have scope '$scope'."
            return 2
        }

        [ -f "$(configdir)/templates/$template/$scope/$unitFile.unit" ] ||  {
            echo -e "Cannot dereference unit '$unit'.\nTemplate '$template' doesn't have unitfile '$unitFile' in scope '$scope'."
            return 3
        }

    else

        [ -f "$(configdir)/templates/$template/$unitFile.unit" ] ||  {
            echo -e "Cannot dereference unit '$unit'.\nTemplate '$template' doesn't have unitfile '$unitFile' in global scope."
            return 3
        }

    fi


    echo "$(configdir)/templates/$(echo "$unit" | sed 's|\.|/|g').unit"
}
w
viewUnit(){
    local unit="$1"

    [ -z "$PAGER" ] && PAGER=less

    if unitPath="$(dereferenceUnit "$1")"
    then
        $PAGER "$unitPath"
    else
        echo "$unitPath"
        echo "Failed to view unit '$unit'"
    fi
}

release(){
    tput rmcup
    echo "Cancelling operation..."
    exit 1
}

trap release SIGINT

createTemplate(){

    local width="$(tput cols)"
    local height="$(tput lines)"



    # Store screen contents
    tput smcup
    tput clear
    echoCentered "kaltemplate version $KALTEMPLATE_VERSION" 1
    echoCentered "Create Template" 2
    tput cup $((height/3)) 0
    tput dl1
    echo -n "Name: "
    read -r name

    while [ -d "$(configdir)/templates/$name" ]
    do

        echoCentered "Template $name already exists." 0 "$(tput setaf 1)" "$(tput sgr0)"

        tput cup $((height/3)) 0
        tput dl1
        echo -n "Name: "
        read -r name
    done


    tput cup 0 0
    tput el


    echoCentered "Name: $name" 5
    tput cup $((height/3)) 0
    tput dl1
    echo -n "Deploy to: "
    read -r path
    echoCentered "Deploy to: $path" 6
    local response=""
    tput cup $((height/3)) 0
    tput dl1
    echo -n "Is this correct? [y/n]: "
    while [ -z "$response" ]
    do
        read -r response
        case "$response" in
            y|Y)
                mkTemplate "$name" "$path"
            ;;
            n|N)
                tput rmcup
                echo "Template creation cancelled."
                exit 2
            ;;
            *)
                tput cup $((height/3)) 0
                tput dl1
                echo -n "Answer with y/n: "
                response=""
                ;;
        esac
    done

}

while [ -n "$1" ]
do
    case "$1" in
        new)
            createTemplate
            shift
            ;;
        viewUnit)
            shift
            viewUnit "$1"
            shift
            ;;
        viewTemplate)
            shift
            viewTemplate "$1"
            shift
            ;;
        *)
            echo "Unrecognized command-line argument: $1"
            exit 1
            ;;
    esac
done
